<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Model.Repository" #>
<#@ import namespace="SharpDox.Model.Documentation" #>
<#@ import namespace="SharpDox.Sdk.Config" #>
<#@ import namespace="SharpDox.Plugins.Html.Templates.Strings" #> 

<#  if(Article.Children.Count > 0) { #>
		<ul>
<#	}

	for (int i = 0; i < Article.Children.Count; i++)
	{
		var article = Article.Children[i];
		var dataUrl = string.IsNullOrEmpty(article.Filename) ? Guid.NewGuid().ToString() : article.Filename;

		if (article.Content == "SDDoc")
		{ #>		
			<# var apiNavTemplate = new ApiNavTemplate { Repository = Repository, Strings = Strings }; #>						
			<#= string.Format("<li data-jstree='{{\"icon\":\"icon-code\"}}' id=\"node-article/{0}\">{1} {2}</li>", dataUrl, article.Title, apiNavTemplate.TransformText()) #>
		<# }
		else if (!string.IsNullOrEmpty(article.Content))
		{ #>
			<# var articleNavTemplate = new ArticleNavTemplate { Article = article, Repository = Repository, Strings = Strings }; #>		
			<#= string.Format("<li data-jstree='{{\"icon\":\"icon-file-text\"}}' id=\"node-article/{0}\"><a href=\"#article/{0}\">{1}</a>{2}</li>", dataUrl, article.Title, articleNavTemplate.TransformText()) #>
		<# }
		else
		{ #>
			<# var articleNavTemplate = new ArticleNavTemplate { Article = article, Repository = Repository, Strings = Strings }; #>
			<#= string.Format("<li data-jstree='{{\"icon\":\"icon-folder-close\"}}' id=\"node-article/{0}\">{1} {2}</li>", dataUrl, article.Title, articleNavTemplate.TransformText()) #>
		<# }
	} 

	if(Article.Children.Count > 0) { #>
		</ul>	
<#	}	#>

<#+	public SDArticle Article { get; set; }
	public SDRepository Repository { get; set; }
	public IStrings Strings { get; set; } #>