<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Model.Repository" #>
<#@ import namespace="SharpDox.Model.Documentation" #>
<#@ import namespace="SharpDox.Sdk.Config" #>
<#@ import namespace="MarkdownSharp" #> 
<#@ import namespace="SharpDox.Plugins.Html.Templates.Strings" #> 

[{"title":"<#= Strings.Home #>", "children":[

<# if(Repository.Articles.Count > 0) {
		var articles = Repository.Articles.ContainsKey(CurrentLanguage) ? Repository.Articles[CurrentLanguage] : Repository.Articles["default"];
		for (int i = 0; i < articles.Count; i++)
		{
			var article = articles[i];

			if (article.Content == "SDDoc")
			{ #>		
				<# var apiNavTemplate = new ApiNavTemplate { Repository = Repository }; #>						
				<#= string.Format("{{\"type\":\"api\", \"title\":\"{0}\", \"children\":[{1}]}}", article.Title, apiNavTemplate.TransformText()) #>
			<# }
			else if (!string.IsNullOrEmpty(article.Content))
			{ #>
				<# var articleNavTemplate = new ArticleNavTemplate { Article = article, Repository = Repository }; #>		
				<#= string.Format("{{\"type\":\"link\", \"title\":\"{0}\", \"children\":[{1}]}}", article.Title, articleNavTemplate.TransformText()) #>
			<# }
			else
			{ #>
				<# var articleNavTemplate = new ArticleNavTemplate { Article = article, Repository = Repository }; #>
				<#= string.Format("{{\"type\":\"placeholder\", \"title\":\"{0}\", \"children\":[{1}]}}", article.Title, articleNavTemplate.TransformText()) #>
			<# }

			if(i != articles.Count - 1) #> , <#
		}
	} else {
		var apiNavTemplate = new ApiNavTemplate { Repository = Repository }; #>
		<#= apiNavTemplate.TransformText() #>
<# } #>

]}]

<#+	public SDRepository Repository { get; set; }
	public string CurrentLanguage { get; set; }
	public IStrings Strings { get; set; } #>