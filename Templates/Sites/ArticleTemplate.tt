<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Model.Repository" #>
<#@ import namespace="SharpDox.Model.Documentation" #>
<#@ import namespace="SharpDox.Sdk.Config" #>
<#@ import namespace="SharpDox.Sdk" #>
<#@ import namespace="MarkdownSharp" #>
<#@ import namespace="SharpDox.Plugins.Html.Templates.Strings" #> 

<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title><#= Repository.ProjectInfo.ProjectName #></title>
        <meta name="viewport" content="width=device-width">

		<link rel="stylesheet" type="text/css" href="../stylesheets/reset.css" />
		<link rel="stylesheet" type="text/css" href="../stylesheets/font.css" />
		<link rel="stylesheet" type="text/css" href="../stylesheets/font-awesome.css" />
		<link rel="stylesheet" type="text/css" href="../stylesheets/typography.css" />		
		<link rel="stylesheet" type="text/css" href="../stylesheets/markdown.css" />
		<link rel="stylesheet" type="text/css" href="../stylesheets/layout.css" />

		<script src="../js/vendor/jquery.js"></script>
		<script src="../js/Iframe.js"></script>
    </head>
    <body>        
        
		<div id="header">
			<h2 class="type-title"><#= Article.Title #></h2>
			<# if(!string.IsNullOrEmpty(Repository.ProjectInfo.VersionNumber)) { #>
				<span class="namespace-title">Version <#= Repository.ProjectInfo.VersionNumber #></span>
			<# } #>
		</div>
		<div id="pagecontent">

			<h3 class="box-title first-heading"><#= Strings.Article #></h3>
			<div class="divider">
			<span></span>
			</div>

			<div class="text-box markdown">
				<#	var template = new Templater(Repository, Article.Content); 
					var helper = new Helper(Repository);
					var article = template.TransformText(helper.TransformLinkToken); #>

				<#= new Markdown().Transform(article) #>
			</div>

		</div>	

    </body>
</html>

<#+	public SDRepository Repository { get; set; }
	public SDArticle Article { get; set; } 
	public IStrings Strings { get; set; } #>