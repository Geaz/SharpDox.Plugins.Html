<#@ template language="C#" #>
<#@ assembly name="System.Core" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Plugins.Html.Steps" #>
<#@ import namespace="SharpDox.Model.Documentation.Article" #>

<ul>
	<#= string.Format("<li data-jstree='{{\"icon\":\"icon-home\"}}' id=\"home\" class=\"jstree-open\"><a href=\"#home\">{0}</a>", StepInput.DocStrings.Home) #>
	<ul>
		<# if(StepInput.SDProject.Articles.Count > 0) {
				var articles = StepInput.SDProject.Articles.ContainsKey(StepInput.CurrentLanguage) ? StepInput.SDProject.Articles[StepInput.CurrentLanguage] : StepInput.SDProject.Articles["default"];
				for (int i = 0; i < articles.Count; i++)
				{
					var article = articles[i];
					var dataUrl = string.IsNullOrEmpty(article.Filename) ? Guid.NewGuid().ToString() : article.Filename;

					if (article is SDDocPlaceholder)
					{ #>		
						<# var apiNavTemplate = new ApiNavTemplate { Repository = StepInput.SDProject.Repositories[((SDDocPlaceholder)article).SolutionFile] }; #>						
						<#= string.Format("<li data-jstree='{{\"icon\":\"icon-code\"}}' id=\"node-article/{0}\">{1} {2}</li>", dataUrl, article.Title, apiNavTemplate.TransformText()) #>
					<# }
					else if (!string.IsNullOrEmpty(article.Content))
					{ #>
						<# var articleNavTemplate = new ArticleNavTemplate { Article = article }; #>		
						<#= string.Format("<li data-jstree='{{\"icon\":\"icon-file-text\"}}' id=\"node-article/{0}\"><a href=\"#article/{0}\">{1}</a>{2}</li>", dataUrl, article.Title, articleNavTemplate.TransformText()) #>
					<# }
					else
					{ #>
						<# var articleNavTemplate = new ArticleNavTemplate { Article = article }; #>
						<#= string.Format("<li data-jstree='{{\"icon\":\"icon-folder-close\"}}' id=\"node-article/{0}\">{1} {2}</li>", dataUrl, article.Title, articleNavTemplate.TransformText()) #>
					<# }
				}
			} else {
				var apiNavTemplate = new ApiNavTemplate { Repository = StepInput.SDProject.Repositories.Single().Value }; #>
				<#= apiNavTemplate.TransformText() #>
		<# } #>
	</ul>
	</li>	
</ul>