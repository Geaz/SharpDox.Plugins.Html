<#@ template language="C#" #>
<#@ assembly name="System.Core" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Model" #>
<#@ import namespace="SharpDox.Model.Repository" #>
<#@ import namespace="SharpDox.Model.Documentation.Article" #>
<#@ import namespace="SharpDox.Plugins.Html.Steps" #>
<#@ import namespace="CommonMark" #>

<# var helper = new Helper(StepInput.SDProject); #>

"<#= TargetFx.Name #>": {
	"name": "<#= Namespace.Fullname #>",
	"assembly": "<#= Namespace.Assemblyname #>",
	"description": "<#= Namespace.Descriptions.GetElementOrDefault(StepInput.CurrentLanguage) != null ?
					helper.ToObjectString(CommonMarkConverter.Convert(Namespace.Descriptions.GetElementOrDefault(StepInput.CurrentLanguage).Transform(helper.TransformLinkToken)))
					: string.Empty #>", 
	<# if(Namespace.UsedBy.Count > 0) { #>
	"usedBy": [
		<#= string.Join(",", Namespace.UsedBy.Select(usedBy => 
			string.Format("{{\"id\": \"{0}\",\"name\": \"{1}\"}}", usedBy.Identifier, usedBy.Fullname))) #>
	],
	<# } if(Namespace.Uses.Count > 0) { #>
	"uses": [
		<#= string.Join(",", Namespace.Uses.Select(use => 
			string.Format("{{\"id\": \"{0}\",\"name\": \"{1}\"}}", use.Identifier, use.Fullname))) #>
	], 
	<# } #>
	"types":[
		<#= string.Join(",", Namespace.Types.Select(sdType => new TypeData { Type = sdType }.TransformText())) #>
	]
}

<#+	public SDNamespace Namespace { get; set; } #>
<#+	public SDTargetFx TargetFx { get; set; } #>