<#@ template language="C#" #>
<#@ assembly name="System.Core" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Model" #>
<#@ import namespace="SharpDox.Model.Repository" #>

<# 
//First merge all namespace and types to create a navigation for all available targets
var consolidatedNamespaces = new List<SDNamespace>();
var targetNamespaces = SDSolution.GetAllNamespaces(); 
foreach(var targetNamespace in targetNamespaces)
{
	var consolidatedNamespace = targetNamespace.Value.Values.First();
	foreach(var sdNamespace in targetNamespace.Value.Values.Skip(1))
	{
		foreach(var sdType in sdNamespace.Types)
		{
			if(consolidatedNamespace.Types.SingleOrDefault(s => s.Identifier == sdType.Identifier) == null)
			{
				consolidatedNamespace.Types.Add(sdType);
			}			
		}
	}
	consolidatedNamespaces.Add(consolidatedNamespace);
}

foreach(var sdNamespace in consolidatedNamespaces)
{
	var namespaceNavTemplate = new NamespaceNavigation { Namespace = sdNamespace }; #>
	{
		id: '<#= sdNamespace.Identifier #>',
		text: '<#= sdNamespace.Fullname #>',
		icon: './assets/icons/namespace_public.png',
		a_attr: { href : '#!namespace/<#= sdNamespace.Identifier #>' },
		children: [
			<#= namespaceNavTemplate.TransformText() #>
		]
	},
<# } #>

<#+ public SDSolution SDSolution { get; set; } #>