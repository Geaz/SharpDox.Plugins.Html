<#@ template language="C#" #>
<#@ assembly name="System.Core" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Sdk" #>
<#@ import namespace="SharpDox.Model.Repository" #>
<#@ import namespace="SharpDox.Plugins.Html.Steps" #>
<#@ import namespace="MarkdownSharp" #>

<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title><#= StepInput.SDProject.ProjectName #> - <#= Namespace.Fullname #></title>
        <meta name="viewport" content="width=device-width">

		<# #if DEBUG #>
			<link rel="stylesheet" type="text/css" href="../assets/css/reset.css" />
			<link rel="stylesheet" type="text/css" href="../assets/css/font.css" />
			<link rel="stylesheet" type="text/css" href="../assets/css/font-awesome.css" />
			<link rel="stylesheet" type="text/css" href="../assets/css/typography.css" />		
			<link rel="stylesheet" type="text/css" href="../assets/css/markdown.css" />	
			<link rel="stylesheet" type="text/css" href="../assets/css/dropdown.css" />			
			<link rel="stylesheet" type="text/css" href="../assets/css/tree.css" />
			<link rel="stylesheet" type="text/css" href="../assets/css/layout.css" />
			<link rel="stylesheet" type="text/css" href="../assets/css/vs.css" />

			<script src="../assets/js/vendor/jquery.min.js"></script>
			<script src="../assets/js/vendor/jquery-ui.custom.min.js"></script>	
			<script src="../assets/js/vendor/jquery.dropdown.min.js"></script>			
			<script src="../assets/js/vendor/jquery.layout.min.js"></script>
			<script src="../assets/js/vendor/jquery.print.js"></script>
			<script src="../assets/js/vendor/highlight.pack.js"></script>

			<script src="../assets/js/frame/iframe.js"></script>
		<# #else #>
			<link rel="stylesheet" type="text/css" href="../assets/css/style.css?version=<#= FileVersionInfo.GetVersionInfo(Assembly.GetAssembly(typeof(HtmlExporter)).Location).FileVersion #>" />
			
			<!--[if IE 8]>
				<script src="../assets/js/vendor.ie8.js?version=<#= FileVersionInfo.GetVersionInfo(Assembly.GetAssembly(typeof(HtmlExporter)).Location).FileVersion #>"></script>
			<![endif]-->
			<![if !IE 8]>
				<script src="../assets/js/vendor.js?version=<#= FileVersionInfo.GetVersionInfo(Assembly.GetAssembly(typeof(HtmlExporter)).Location).FileVersion #>"></script>
			<![endif]>

			<script src="../assets/js/frame.js?version=<#= FileVersionInfo.GetVersionInfo(Assembly.GetAssembly(typeof(HtmlExporter)).Location).FileVersion #>"></script>
		<# #endif #>

		<script>hljs.initHighlightingOnLoad();</script>

    </head>
    <body>        
       
	    <div id="dropdown-1" class="dropdown dropdown-tip">
			<ul class="dropdown-menu">
				<# foreach(var type in Namespace.Types) { 

					var sdType = (SDType)StepInput.SDProject.GetTypeByIdentifier(type.Identifier); #>
					<li><a href="../type/<#= sdType.ShortIdentifier #>.html"><img alt="Class-Icon" src="../assets/images/icons/class_<#= sdType.Accessibility #>.png"> <#= sdType.Name #></a></li>

				<# } #>
			</ul>
		</div>
	   
	    <div class="ui-layout-north">
			<div class="toolbar">
				<a href="#" data-dropdown="#dropdown-1" class="button"><img src="../assets/images/icons/class_public.png"/> <#= StepInput.DocStrings.Types #> <span class="info">(<#= Namespace.Types.Count #>)</span> <i class="icon-caret-down"></i></a>
				<div class="right">
					<span class="toolbar-info"> Assembly: <#= Namespace.Assemblyname #></span>
					<a href="#" id="print-button" class="button" title="<#= StepInput.DocStrings.Print #>"><i class="icon-print"></i></a>
				</div>
				<div style="clear:both;"></div>
			</div>
		</div>
        
		<div class="ui-layout-center">
			<div>
				<# if(Namespace.Description.Count != 0 && Namespace.Description.ContainsKey(StepInput.CurrentLanguage)) { #>
					<h3 class="box-title first-heading"><#= StepInput.DocStrings.Description #></h3>
				
					<div class="text-box markdown">
						<#	var template = new Templater(StepInput.SDProject, Namespace.Description[StepInput.CurrentLanguage]); 
							var helper = new Helper(StepInput.SDProject);
							var namespaceDescription = template.TransformText(helper.TransformLinkToken); #>

						<#= new Markdown().Transform(namespaceDescription) #>
					</div>
					<h3 class="box-title"><#= StepInput.DocStrings.Types #></h3>

				<# } else { #>

					<h3 class="box-title first-heading"><#= StepInput.DocStrings.Types #></h3>

				<# } #>

				<div class="table-box">
					<table>
						<thead>
							<tr>
								<td></td>
								<td>Name</td>
								<td>Description</td>
							</tr>
						</thead>
						<tbody>			

							<# var even = false; 
							foreach(var type in Namespace.Types) { 
								var sdType = (SDType)StepInput.SDProject.GetTypeByIdentifier(type.Identifier); #>

								<tr <# if(even) { even = false; #> class="even" <# } else { even = true; } #>>
									<td class="iconColumn">
										<img alt="Class-Icon" src="../assets/images/icons/class_<#= sdType.Accessibility #>.png">
									</td>
									<td>
										<a title="<#= sdType.Name #>" href="../type/<#= sdType.ShortIdentifier #>.html"><#= sdType.Name #></a>
									</td>	
									<td class="markdown">
										<# if(sdType.Documentation.ContainsKey(StepInput.CurrentLanguage)) { #>
											<#= new Markdown().Transform(sdType.Documentation[StepInput.CurrentLanguage].Summary.ToString()) #>
										<# } #>
									</td>
								</tr>

							<# } #>

						</tbody>
					</table>
				</div>

				<# if(Namespace.Uses.Count > 0) { #>
					<h3 class="box-title"><#= StepInput.DocStrings.Uses #></h3>
					<div class="list-box">
						<ul>
						<# foreach(var use in Namespace.Uses) { #>
							<li><a href="../namespace/<#= use.Fullname #>.html"><#= use.Fullname #></a></li>
						<# } #>
						</ul>
					</div>
				<# } #>

				<# if(Namespace.UsedBy.Count > 0) { #>
					<h3 class="box-title"><#= StepInput.DocStrings.UsedBy #></h3>
					<div class="list-box">
						<ul>
						<# foreach(var used in Namespace.UsedBy) { #>
							<li><a href="../namespace/<#= used.Fullname #>.html"><#= used.Fullname #></a></li>
						<# } #>
						</ul>
					</div>
				<# } #>
			</div>
		</div>
	   
    </body>
</html>

<#+ public SDNamespace Namespace { get; set; } #>