<#@ template language="C#" #>
<#@ assembly name="System.Core" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.UML" #>
<#@ import namespace="SharpDox.Model" #>
<#@ import namespace="SharpDox.Model.Repository" #>
<#@ import namespace="SharpDox.Model.Repository.Members" #>
<#@ import namespace="SharpDox.Model.Documentation" #>
<#@ import namespace="SharpDox.Model.Documentation.Token" #>
<#@ import namespace="SharpDox.Model.Documentation.Article" #>
<#@ import namespace="SharpDox.Plugins.Html.Steps" #>
<#@ import namespace="CommonMark" #>

<# var helper = new Helper(StepInput.SDProject); #>
{
	<#
	var properties = new List<string>();
	properties.Add($"\"id\": \"{Member.Identifier}\"");
	properties.Add($"\"type\": \"{MemberType}\""); 
	properties.Add($"\"accessibility\": \"{Member.Accessibility}\"");

	if(Member is SDMethod) {
		var sdMethod = (SDMethod)Member;
		properties.Add($"\"name\": \"{sdMethod.Signature}\"");

		if(!sdMethod.IsSequenceDiagramEmpty()) {
			properties.Add($"\"diagramId\": \"{sdMethod.Guid}\"");
			properties.Add($"\"sequenceDiagram\": \"{sdMethod.GetSequenceDiagram(Repository).ToSvg().Transform(new Helper(StepInput.SDProject).TransformLinkToken).ToObjectString()}\"");
		}
	} else {
		properties.Add($"\"name\": \"{Member.Name}\"");
	}

	if(Member is SDField && !string.IsNullOrEmpty(((SDField)Member).ConstantValue)) {
		properties.Add($"\"constantValue\": \"{((SDField)Member).ConstantValue.ToObjectString()}\"");
	}

	var documentation = Member.Documentations.GetElementOrDefault(StepInput.CurrentLanguage);
	if(documentation != null){
		var documentationTemplate = new DocumentationData { Documentation = documentation };
		var documentationText = documentationTemplate.TransformText();
		if(!string.IsNullOrWhiteSpace(documentationText)) properties.Add(documentationText);
	}

	properties.Add($"\"syntax\": \"{Member.Syntax}\"");
	properties.Add($"\"linkedSyntax\": \"{Member.SyntaxTemplate.Transform(helper.TransformLinkToken).ToObjectString()}\"");
	#>
	<#= string.Join(",", properties) #>		
}

<#+
public SDMemberBase Member { get; set; }
public string MemberType { get; set; }
public SDRepository Repository { get; set; } 
#>